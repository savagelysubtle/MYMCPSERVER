# pyproject.toml
[project]
name            = "chemist_server"
version         = "0.1.0"
description     = "The MCP server for all tools"
readme          = "README.md"
requires-python = ">=3.13"
dependencies    = ["httpx", "mcp[cli]>=1.6.0,<2.0.0", "pyyaml", "pydantic", "uvicorn", "anyio", "jsonschema", "python-dotenv", "pydantic-settings", "the_aichemist_codex @ git+https://github.com/savagelysubtle/the_aichemist_codex.git@refactor", "GitPython", "tool>=0.8.0", "mem0ai>=0.1.55"]

    [[project.authors]]
    name  = "savagelysubtle"
    email = "163227725+savagelysubtle@users.noreply.github.com"

    [project.urls]
    "Homepage"    = "https://github.com/savagelysubtle/MYMCPSERVER"
    "Bug Tracker" = "https://github.com/savagelysubtle/MYMCPSERVER/issues"

    [project.optional-dependencies]
    dev = ["pytest>=7.4.0", "pytest-asyncio>=0.26.0", "coverage>=7.8.0", "pytest-dotenv>=0.5.2", "mypy>=1.8.0", "ruff>=0.11.2", "black>=25.1.0"]

[build-system]
requires      = ["uv-build>=0.6.0,<0.7"]
build-backend = "uv_build"

    [project.scripts]
    # Path to the server.py in the chemist_server package
    mcp-server = "chemist_server.server:main"

[tool.uv]
required-version           = ">=0.6.0"
cache-dir                  = "./.uv_cache"
index-url                  = "https://pypi.org/simple/"
no-build-isolation-package = ["ruff"]
link-mode                  = "copy"
managed                    = true

[tool.ruff]
# Explicitly target Python 3.13
target-version = "py313"
# Define source directories for Ruff to scan
src = ["src", "tests"]
# Use a line length common with Black
line-length = 88
# Add specific directories or files to exclude globally for Ruff
extend-exclude = [
    # "path/to/exclude",
]

    [tool.ruff.lint]
    # Enable all lint rules initially, can be refined later
    select = [
        "E",   # pycodestyle errors
        "F",   # pyflakes
        "W",   # pycodestyle warnings
        "I",   # isort
        "N",   # pep8-naming
        "UP",  # pyupgrade
        "B",   # flake8-bugbear
        "C90", # mccabe complexity
        "PT",  # flake8-pytest-style
        "SIM", # flake8-simplify
        "TID", # flake8-tidy-imports
        "ARG", # flake8-unused-arguments
        "RUF", # Ruff-specific rules
    ]
    ignore = [
        "E501",   # Line too long (handled by formatter)
        "W191",   # Tab indentation (handled by formatter)
        "E111",   # Indentation (handled by formatter)
        "E114",   # Indentation (handled by formatter)
        "E117",   # Indentation (handled by formatter)
        "D100",   # Missing docstring in public module
        "D101",   # Missing docstring in public class
        "D102",   # Missing docstring in public method
        "D103",   # Missing docstring in public function
        "D104",   # Missing docstring in public package
        "D105",   # Missing docstring in magic method
        "D106",   # Missing docstring in public nested class
        "D107",   # Missing docstring in __init__
        "ANN101", # Missing type annotation for self
        "ANN102", # Missing type annotation for cls
        "ANN401", # Dynamically typed expressions (Any) are disallowed
        "COM812", # Trailing comma missing (handled by formatter)
        "ISC001", # Implicitly concatenated strings on one line (handled by formatter)
    ]

        [tool.ruff.lint.isort]
        known-first-party = ["chemist_server"]


[tool.pytest.ini_options]
testpaths    = ["tests"]
asyncio_mode = "auto"
pythonpath   = ["src"]
addopts      = "-ra --strict-markers --cov=src/chemist_server --cov-report=term-missing --cov-report=html"
load_dotenv  = true

[tool.coverage.run]
source = ["chemist_server"]
omit   = ["tests/*", "src/chemist_server/__main__.py"]

[tool.coverage.report]
show_missing = true

[tool.mypy]
python_version      = "3.13"
warn_unused_configs = true
